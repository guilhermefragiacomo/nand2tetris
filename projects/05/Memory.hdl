// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/5/Memory.hdl
/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid and reads 0. Access to any address
 * in the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the Screen
 * and Keyboard chip specifications given in the lectures and the book.
 */
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:

    And(a=address[14], b=true, out=is14True);
    Mux(a=load, b=false, sel=is14True, out=ramLoad);

	RAM16K(in=in, load=ramLoad, address[0..13]=address[0..13], out=ramOut);

    Or8Way(in=address[0..7], out=anyOneUntil8);
    Or8Way(in[0..4]=address[8..12], in[5..7]=false, out=anyOneUntil13);
    Or(a=anyOneUntil8, b=anyOneUntil13, out=anyOne);

    And(a=is14True, b=address[13], out=is14And13True);
    Not(in=anyOne, out=thereIsNoOne);
    And(a=is14And13True, b=thereIsNoOne, out=keyboardToOut);

    Not(in=keyboardToOut, out=notKeyboard);
    And(a=notKeyboard, b=is14True, out=screenToOut);
    Mux(a=false, b=load, sel=screenToOut, out=screenLoad);

    Screen(in=in, load=screenLoad, address[0..12]=address[0..12], out=screenOut);

    Keyboard(out=keyboardOut);

    Mux16(a=screenOut, b=keyboardOut, sel=keyboardToOut, out=keyboardOrScreen);
    Mux16(a=ramOut, b=keyboardOrScreen, sel=address[14], out=out);
}